{"ast":null,"code":"var _jsxFileName = \"/Users/danielaramos/Documents/GitHub/tradingchatbot/chat/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/ask\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        is_first: true\n      })\n    }).then(res => res.json()).then(data => setMessages([{\n      role: \"assistant\",\n      content: data.answer\n    }]));\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    const question = input.trim();\n    if (!question) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: question\n    }]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: \"Error: \" + data.error\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: data.answer\n        }]);\n      }\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Failed to connect to the backend.\"\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      maxWidth: 600,\n      margin: \"2rem auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gradient-title\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"TradeBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-start\",\n        children: \"Ask a question about your trading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-bubble\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 2,\n      placeholder: \"Type your question and press Enter...\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyDown,\n      disabled: loading,\n      className: \"chat-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading || !input.trim(),\n      className: \"chat-send-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GZSrrLN5r8vzog9xr5rXj0yxcxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetch","method","headers","body","JSON","stringify","is_first","then","res","json","data","role","content","answer","sendMessage","question","trim","prev","sender","text","error","handleKeyDown","e","key","shiftKey","preventDefault","className","style","maxWidth","margin","fontFamily","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","idx","ref","rows","placeholder","value","onChange","target","onKeyDown","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/danielaramos/Documents/GitHub/tradingchatbot/chat/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n  fetch(\"http://127.0.0.1:5000/ask\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ is_first: true }),\n  })\n    .then(res => res.json())\n    .then(data => setMessages([{ role: \"assistant\", content: data.answer }]));\n}, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async () => {\n    const question = input.trim();\n    if (!question) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { sender: \"user\", text: question }]);\n    setInput(\"\");\n    setLoading(true);\n\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question }),\n      });\n      const data = await res.json();\n      if (data.error) {\n        setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error: \" + data.error }]);\n      } else {\n        setMessages((prev) => [...prev, { sender: \"bot\", text: data.answer }]);\n      }\n    } catch {\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Failed to connect to the backend.\" }]);\n    }\n\n    setLoading(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ maxWidth: 600, margin: \"2rem auto\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1 className='gradient-title' style={{ textAlign: \"center\" }}>TradeBot</h1>\n\n      <div className=\"chat-window\">\n        {messages.length === 0 && !loading && (\n          <div className=\"chat-start\">Ask a question about your trading data...</div>\n        )}\n\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}>\n            <div className=\"chat-bubble\">{msg.text}</div>\n          </div>\n        ))}\n\n        {loading && (\n          <div className=\"chat-message bot\">\n            <div className=\"chat-bubble\">...</div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      <textarea\n        rows={2}\n        placeholder=\"Type your question and press Enter...\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={handleKeyDown}\n        disabled={loading}\n        className=\"chat-input\"\n      />\n      <button onClick={sendMessage} disabled={loading || !input.trim()} className=\"chat-send-button\">\n        Send\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}